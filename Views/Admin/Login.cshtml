@{
    ViewData["Title"] = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Cynthia Spinner</title>
    <link rel="stylesheet" href="~/css/login.css?v=1.0.5" />
</head>

<body>
    <div class="login-container @(ViewBag.ErrorMessage != null ? "has-error" : "")">
        <div class="login-header">
            <h1>
                <span class="gradient-text">Login</span>
            </h1>
        </div>
        
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="error-message">
                @ViewBag.ErrorMessage
            </div>
        }
        
        <form asp-action="Login" method="post" id="loginForm">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" class="form-control" id="username" name="username" value="@Model?.Username">
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" class="form-control" id="password" name="password">
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
            <div class="validation-message" id="validationMessage"></div>
        </form>
    </div>

    <script>
        // Clear password field when there's an error
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <text>
            document.addEventListener('DOMContentLoaded', function() {
                document.getElementById('password').value = '';
            });
            </text>
        }

        // Custom form validation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('loginForm');
            const validationMessage = document.getElementById('validationMessage');
            
            form.addEventListener('submit', function(e) {
                const username = document.getElementById('username').value.trim();
                const password = document.getElementById('password').value.trim();
                
                if (!username || !password) {
                    e.preventDefault();
                    validationMessage.textContent = 'Please fill in all fields.';
                    validationMessage.style.opacity = '1';
                    return false;
                }
                
                // Clear validation message if fields are filled
                validationMessage.style.opacity = '0';
            });
            
            // Clear validation message when user starts typing
            const inputs = form.querySelectorAll('input[type="text"], input[type="password"]');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    const username = document.getElementById('username').value.trim();
                    const password = document.getElementById('password').value.trim();
                    
                    if (username && password) {
                        validationMessage.style.opacity = '0';
                    }
                });
            });
        });
    </script>
</body>

</html>